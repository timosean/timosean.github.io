{
    "componentChunkName": "component---src-templates-prob-solving-template-js",
    "path": "/vscode-setting",
    "result": {"pageContext":{"html":"<h2>⚙Visual Studio Code(C++) 알고리즘 풀이 환경 세팅하기</h2>\n<p>원래는 Visual Studio를 사용해서 알고리즘 문제풀이를 해왔는데, 새 노트북을 사고 노트북에 설치할 것들을 좀 최소화하기로 마음먹었다. 원래 웹개발을 하던 Visual Studio Code에서\r\n여러가지 작업들을 통합해서 하기로 했다. 그런데 Visual Studio Code에서는 백준 알고리즘 문제풀이를 하기에는 불편한 점들이 몇 개 있었다.</p>\n<ol>\n<li>코드를 수정할 때마다 매번 컴파일 해줘야 한다.</li>\n<li>문제에서 제공하는 테스트케이스 등의 입력을 매번 복붙해야한다.</li>\n<li>컴파일과 실행을 <strong>동시에</strong> 할 수 없다.</li>\n</ol>\n<p>이러한 불편한 점들을 확장프로그램과 유용한 함수, VS Code의 설정을 활용하여 해결할 수 있었다.</p>\n<hr/>\n<h4>1. Code Runner - Jun Han</h4>\n<p>이 확장프로그램을 사용하면 C++ 뿐만 아니라 다양한 언어들을 클릭 한 번에 VS Code 내에서 바로 실행시켜 볼 수 있다!<br>\n아래 그림의 재생모양 버튼을 누르면 바로 실행시켜 결과를 볼 수 있다.</p>\n<p align=\"center\">\r\n<img alt=\"code_runner_img\" src=\"https://github.com/timosean/timosean.github.io/blob/master/postimages/vscode1.png?raw=true\">\r\n</p>\n<br />\n<h4>2. freopen함수와 input.txt 활용</h4>\n<p>백준과 유사한 환경을 만들기 위해 입력값을 txt 파일에 미리 넣어두고 파일을 실행하도록 만들어보자.<br>\n폴더 내에 <code>input.txt</code> 파일을 만들고(이름은 꼭 <code>input.txt</code>아니어도 상관없음) <code>main</code> 함수의 첫 줄에<br>\n<code>freopen(\"input.txt\", \"r\", stdin);</code> 코드를 추가한다.<br>\n위 코드는 <code>input.txt</code>에 있는 값을 <code>stdin</code>으로 읽어오는 코드이다.<br>\n<strong>이제, 백준에서 입력부분을 복사해 input.txt에 붙여넣고 code runner로 실행시키면 된다!</strong></p>\n<br />\n<h4>3. Code Snippet (사용자 코드조각) 사용하기</h4>\n<p>Snippet은 '작은 조각'을 뜻한다. 따라서, Code Snippet은 '코드 조각'인데, <strong>재사용이 가능한</strong> 소스코드라고 보면 된다. 따라서, 사용자가 <strong>자주 사용하는 코드에 대한 반복 타이핑을 회피</strong>할 수 있게 도와준다. 지정한 단축어를 입력하면 내가 지정해둔 '코드의 뼈대'가 자동으로 입력된다. 쉽게 말해서, 자동 완성을 할 수 있게 해준다!<br>\n<br />\r\nCode Snippet을 만들기 위해서, <strong>[VS Code 오른쪽 하단의 톱니바퀴 아이콘 (기본설정)] - [사용자 코드 조각] - [(C++을 사용하므로)cpp.json]</strong> 으로 들어간다.<br>\n이후, 아래와 같이 코드를 넣어준다. (단축어는 본인 마음)</p>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">&quot;algorithm-init&quot;: {\r\n    &quot;prefix&quot;: &quot;algorithm-init&quot;,\r\n    &quot;body&quot;: [\r\n        &quot;#include &lt;iostream&gt;&quot;,\r\n        &quot;&quot;,\r\n        &quot;using namespace std;&quot;,\r\n        &quot;&quot;,\r\n        &quot;int main()&quot;,\r\n        &quot;{&quot;,\r\n        &quot;  freopen(\\&quot;input.txt\\&quot;, \\&quot;r\\&quot;, stdin);&quot;,\r\n        &quot;&quot;,\r\n        &quot;  return 0;&quot;,\r\n        &quot;}&quot;\r\n    ],\r\n    &quot;description&quot;: &quot;alogorithm init snippet&quot;\r\n}</code>\n        </deckgo-highlight-code>\n<br />\n<p>이제, cpp 파일에서 <code>algorithm-init</code>이라는 단축어를 통해서 아래 이미지와 같이 코드 조각을 생성해 낼 수 있다.</p>\n<p align=\"center\">\r\n<img alt=\"codesnippet_img1\" src=\"https://github.com/timosean/timosean.github.io/blob/master/postimages/vscode2.png?raw=true\">\r\n</p>\r\n<p align=\"center\">\r\n<img alt=\"codesnippet_img2\" src=\"https://github.com/timosean/timosean.github.io/blob/master/postimages/vscode3.png?raw=true\">\r\n</p>","title":"PS를 위한 VS Code 세팅","date":"January 24, 2022","next":{"frontmatter":{"path":"/good-code","title":"좋은 코드를 짜기 위한 노력"}},"previous":{"frontmatter":{"path":"/boj1065","title":"[C++] BOJ #1065 한수"}}}},
    "staticQueryHashes": ["3649515864"]}