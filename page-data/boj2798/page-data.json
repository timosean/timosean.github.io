{
    "componentChunkName": "component---src-templates-prob-solving-template-js",
    "path": "/boj2798",
    "result": {"pageContext":{"html":"<h2>문제</h2>\n<p>카지노에서 제일 인기 있는 게임 블랙잭의 규칙은 상당히 쉽다. 카드의 합이 21을 넘지 않는 한도 내에서, 카드의 합을 최대한 크게 만드는 게임이다. 블랙잭은 카지노마다 다양한 규정이 있다.</p>\n<p>한국 최고의 블랙잭 고수 김정인은 새로운 블랙잭 규칙을 만들어 상근, 창영이와 게임하려고 한다.</p>\n<p>김정인 버전의 블랙잭에서 각 카드에는 양의 정수가 쓰여 있다. 그 다음, 딜러는 N장의 카드를 모두 숫자가 보이도록 바닥에 놓는다. 그런 후에 딜러는 숫자 M을 크게 외친다.</p>\n<p>이제 플레이어는 제한된 시간 안에 N장의 카드 중에서 3장의 카드를 골라야 한다. 블랙잭 변형 게임이기 때문에, 플레이어가 고른 카드의 합은 M을 넘지 않으면서 M과 최대한 가깝게 만들어야 한다.</p>\n<p>N장의 카드에 써져 있는 숫자가 주어졌을 때, M을 넘지 않으면서 M에 최대한 가까운 카드 3장의 합을 구해 출력하시오.</p>\n<h3>입력</h3>\n<ul>\n<li>\n<p>첫째 줄에 카드의 개수 N(3 ≤ N ≤ 100)과 M(10 ≤ M ≤ 300,000)이 주어진다. 둘째 줄에는 카드에 쓰여 있는 수가 주어지며, 이 값은 100,000을 넘지 않는 양의 정수이다.</p>\n</li>\n<li>\n<p>합이 M을 넘지 않는 카드 3장을 찾을 수 있는 경우만 입력으로 주어진다.</p>\n</li>\n</ul>\n<h3>출력</h3>\n<ul>\n<li>첫째 줄에 M을 넘지 않으면서 M에 최대한 가까운 카드 3장의 합을 출력한다.</li>\n</ul>\n<hr />\n<h4>해결방법 및 소스코드</h4>\n<p><strong>Brute Force</strong> 방식으로 해결하였다.</p>\n<ul>\n<li>벡터에 넣어놓은 카드 세 장으로 만들 수 있는 모든 조합의 경우의 수를 검사한다. (단, M을 넘지 않는 최대합만 <code>result</code>에 저장)</li>\n<li>ex) <code>cards[0] + cards[1] + cards[2]</code>, 그 다음은 <code>cards[0] + cards[1] + cards[3]</code>, ..., <code>cards[N-3] + cards[N-2] + cards[N-1]</code></li>\n</ul>\n<deckgo-highlight-code language=\"cpp\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\nint possibleCombination(const vector&lt;int&gt; &amp;cards, int &amp;N, int &amp;M)\r\n{\r\n    int result = 0;\r\n    int temp = 0;\r\n\r\n    for (int i = 0; i &lt; N - 2; i++)\r\n    {\r\n        for (int j = i + 1; j &lt; N - 1; j++)\r\n        {\r\n            for (int k = j + 1; k &lt; N; k++)\r\n            {\r\n                temp = cards[i] + cards[j] + cards[k];\r\n                if (temp &gt; result &amp;&amp; temp &lt;= M)\r\n                {\r\n                    result = temp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nint main()\r\n{\r\n    //변수 x: 카드에 쓰여있는 숫자 하나\r\n    int N, M, x;\r\n    int result = 0;\r\n    cin &gt;&gt; N &gt;&gt; M;\r\n\r\n    //벡터에 카드값 채우기\r\n    vector&lt;int&gt; cards;\r\n    for (int i = 0; i &lt; N; i++)\r\n    {\r\n        cin &gt;&gt; x;\r\n        cards.push_back(x);\r\n    }\r\n\r\n    result = possibleCombination(cards, N, M);\r\n    cout &lt;&lt; result;\r\n\r\n    return 0;\r\n}</code>\n        </deckgo-highlight-code>","title":"[C++] BOJ #2798 블랙잭","date":"January 25, 2022","next":{"frontmatter":{"path":"/vscode-setting","title":"PS를 위한 VS Code 세팅"}},"previous":{"frontmatter":{"path":"/boj2231","title":"[C++] BOJ #2231 분해합"}}}},
    "staticQueryHashes": ["3649515864"]}