{
    "componentChunkName": "component---src-templates-prob-solving-template-js",
    "path": "/boj12865",
    "result": {"pageContext":{"html":"<h2>문제</h2>\n<p>이 문제는 아주 평범한 배낭에 관한 문제이다.</p>\n<p>한 달 후면 국가의 부름을 받게 되는 준서는 여행을 가려고 한다. 세상과의 단절을 슬퍼하며 최대한 즐기기 위한 여행이기 때문에, 가지고 다닐 배낭 또한 최대한 가치 있게 싸려고 한다.</p>\n<p>준서가 여행에 필요하다고 생각하는 N개의 물건이 있다. 각 물건은 무게 W와 가치 V를 가지는데, 해당 물건을 배낭에 넣어서 가면 준서가 V만큼 즐길 수 있다. 아직 행군을 해본 적이 없는 준서는 최대 K만큼의 무게만을 넣을 수 있는 배낭만 들고 다닐 수 있다. 준서가 최대한 즐거운 여행을 하기 위해 배낭에 넣을 수 있는 물건들의 가치의 최댓값을 알려주자.</p>\n<h3>입력</h3>\n<ul>\n<li>\n<p>첫 줄에 물품의 수 N(1 ≤ N ≤ 100)과 준서가 버틸 수 있는 무게 K(1 ≤ K ≤ 100,000)가 주어진다. 두 번째 줄부터 N개의 줄에 거쳐 각 물건의 무게 W(1 ≤ W ≤ 100,000)와 해당 물건의 가치 V(0 ≤ V ≤ 1,000)가 주어진다.</p>\n</li>\n<li>\n<p>입력으로 주어지는 모든 수는 정수이다.</p>\n</li>\n</ul>\n<h3>출력</h3>\n<ul>\n<li>한 줄에 배낭에 넣을 수 있는 물건들의 가치합의 최댓값을 출력한다.</li>\n</ul>\n<hr />\n<h4>1. 해결방법 및 소스코드</h4>\n<ul>\n<li>\n<p>**동적 프로그래밍(Dynamic Programming)**으로 해결했다.</p>\n</li>\n<li>\n<p>이 문제는 <strong><code>0/1 Knapsack Problem</code></strong> 으로, 유명한 동적 프로그래밍 문제이다.</p>\n<ol>\n<li>\n<p>동적 프로그래밍 배열 <code>dp[N+1][K+1]</code>을 선언한다. 여기서 열은 가방이 수용할 수 있는 무게를 나타내고, 행은 사용할 수 있는 아이템 번호의 범위를 나타낸다. 예를 들어 2행이면 입력받은 아이템들 중 2번 아이템까지 쓸 수 있을 때를 말한다. 그리고 <code>dp[i][j]</code>는 가방의 수용무게가 <code>j</code>일 때 <code>i</code>번째 아이템까지 썼을 때의 최대 가치를 나타낸다. 맨 처음 행과 맨 처음 열은 0으로 비워둔다.</p>\n</li>\n<li>\n<p><code>i</code>번째 행을 <code>i</code>번째 아이템을 넣었을 때라고 해석하지 말고, <strong><code>i</code>번째 아이템을 넣을건지 말건지 결정하는 단계</strong>라고 생각하면 조금 더 쉽다.</p>\n</li>\n<li>\n<p>현재 칸이 <code>dp[i][j]</code>라고 하자. 그렇다면 현재 가방의 수용무게는 <code>j</code>이고, <code>i</code>번째 아이템까지 쓸 수 있다. 그럼 여기서 <code>i</code>번째 아이템을 넣을지 말지를 결정해야 하는데, 결정 기준은 다음과 같다.</p>\n<blockquote>\n<ol>\n<li><code>i</code>번째 아이템을 넣지 않고, <code>i-1</code>번째 아이템까지 썼을 때의 가치가 더 큰가?</li>\n<li><code>i</code>번째 아이템을 넣는다면, 그것을 넣고 <code>j-(i번째 아이템의 무게)</code>만큼의 무게를 가진 i번 이전의 아이템을 넣어서 무게 <code>j</code>를 맞추는 것이 더 가치가 큰가?</li>\n</ol>\n</blockquote>\n<p>이를 점화식으로 표현하면 다음과 같다.<br>\n<br />\r\n<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>max </mtext><mo stretchy=\"false\">(</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mspace width=\"1em\"></mspace><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo>−</mo><mi>w</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">]</mo><mo>+</mo><mi>v</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mspace width=\"2em\"></mspace><mtext>if </mtext><mi>j</mi><mo>≥</mo><mi>w</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mspace width=\"2em\"></mspace><mspace width=\"2em\"></mspace><mspace width=\"2em\"></mspace><mspace width=\"2em\"></mspace><mspace width=\"2em\"></mspace><mspace width=\"2em\"></mspace><mspace width=\"2em\"></mspace><mspace width=\"1em\"></mspace><mspace width=\"1em\"></mspace><mspace width=\"0.5em\"></mspace><mtext>else </mtext></mrow></mstyle></mtd></mtr></mtable></mrow><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">dp[i][j] = \\begin{cases} \\text {max }(dp[i-1][j], \\quad dp[i-1][j-w[i]] + v[i]) \\qquad \\text {if } j \\geq w[i]\\\\dp[i-1][j] \\qquad \\qquad \\qquad \\qquad \\qquad \\qquad \\qquad \\quad \\quad \\enspace \\text {else }\\end{cases} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">max </span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]]</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">])</span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord text\"><span class=\"mord\">if </span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">else </span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"> </span></span></span></span></span></p>\n<br />\n</li>\n</ol>\n</li>\n</ul>\n<deckgo-highlight-code language=\"cpp\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">#include &lt;iostream&gt;\r\n#include &lt;algorithm&gt;\r\nusing namespace std;\r\n\r\n//w배열은 각 아이템의 무게 저장\r\n//v배열은 각 아이템의 가치 저장\r\n\r\nint main()\r\n{\r\n    int N, K;\r\n    scanf(&quot;%d %d&quot;, &amp;N, &amp;K);\r\n\r\n    int w[N + 1];\r\n    int v[N + 1];\r\n    int dp[N + 1][K + 1] = {\r\n        0,\r\n    };\r\n\r\n    w[0] = 0, v[0] = 0;\r\n\r\n    for (int i = 1; i &lt;= N; i++)\r\n    {\r\n        scanf(&quot;%d %d&quot;, &amp;w[i], &amp;v[i]);\r\n    }\r\n\r\n    for (int j = 1; j &lt;= K; j++)\r\n    {\r\n        if (j &gt;= w[1])\r\n            dp[1][j] = v[1];\r\n    }\r\n\r\n    for (int i = 2; i &lt;= N; i++)\r\n    {\r\n        for (int j = 1; j &lt;= K; j++)\r\n        {\r\n            if (j - w[i] &gt;= 0)\r\n                dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - w[i]] + v[i]);\r\n            else\r\n                dp[i][j] = dp[i - 1][j];\r\n        }\r\n    }\r\n    printf(&quot;%d\\n&quot;, dp[N][K]);\r\n}</code>\n        </deckgo-highlight-code>","title":"[C++] BOJ #12865 평범한 배낭","date":"2022. 02. 28","next":{"frontmatter":{"path":"/boj11048","title":"[C++] BOJ #11048 이동하기"}},"previous":null}},
    "staticQueryHashes": ["3649515864"]}