{
    "componentChunkName": "component---src-templates-prob-solving-template-js",
    "path": "/boj1735",
    "result": {"pageContext":{"html":"<h2>문제</h2>\n<p>분수 A/B는 분자가 A, 분모가 B인 분수를 의미한다. A와 B는 모두 자연수라고 하자.</p>\n<p>두 분수의 합 또한 분수로 표현할 수 있다. 두 분수가 주어졌을 때, 그 합을 기약분수의 형태로 구하는 프로그램을 작성하시오. 기약분수란 더 이상 약분되지 않는 분수를 의미한다.</p>\n<h3>입력</h3>\n<ul>\n<li>첫째 줄과 둘째 줄에, 각 분수의 분자와 분모를 뜻하는 두 개의 자연수가 순서대로 주어진다. 입력되는 네 자연수는 모두 30,000 이하이다.</li>\n</ul>\n<h3>출력</h3>\n<ul>\n<li>첫째 줄에 구하고자 하는 기약분수의 분자와 분모를 뜻하는 두 개의 자연수를 빈 칸을 사이에 두고 순서대로 출력한다.</li>\n</ul>\n<hr />\n<h4>해결방법 및 소스코드</h4>\n<ul>\n<li>통분 및 약분을 해주면 된다. 약분할 때에는 C++의 <code>numeric</code> 헤더에 포함된 <code>gcd</code>함수를 통해 최대공약수를 구해서 활용했다.</li>\n</ul>\n<deckgo-highlight-code language=\"cpp\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">#include &lt;iostream&gt;\r\n#include &lt;numeric&gt;\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    //A의 분자,분모, B의 분자,분모\r\n    //finSon: 통분한 분수의 분자\r\n    //cd: 최대공약수를 담을 변수\r\n    int Ason, Amother, Bson, Bmother;\r\n    int finSon;\r\n    int cd;\r\n\r\n    cin &gt;&gt; Ason &gt;&gt; Amother &gt;&gt; Bson &gt;&gt; Bmother;\r\n\r\n    //분모 통일하기\r\n    Ason *= Bmother;\r\n    Bson *= Amother;\r\n\r\n    Amother *= Bmother;\r\n    Bmother = Amother;\r\n\r\n    finSon = Ason + Bson;\r\n\r\n    cd = gcd(finSon, Amother);\r\n\r\n    cout &lt;&lt; finSon / cd &lt;&lt; &quot; &quot; &lt;&lt; Amother / cd &lt;&lt; endl;\r\n}</code>\n        </deckgo-highlight-code>","title":"[C++] BOJ #1735 분수 합","date":"2022. 01. 26","next":{"frontmatter":{"path":"/boj2168","title":"[C++] BOJ #2168 타일 위의 대각선"}},"previous":{"frontmatter":{"path":"/boj1929","title":"[C++] BOJ #1929 소수 구하기"}}}},
    "staticQueryHashes": ["3649515864"]}