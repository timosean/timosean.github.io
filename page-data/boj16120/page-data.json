{
    "componentChunkName": "component---src-templates-prob-solving-template-js",
    "path": "/boj16120",
    "result": {"pageContext":{"html":"<h2>문제</h2>\n<p>bryan은 PPAP를 좋아한다. bryan은 어떻게 하면 사람들에게 PPAP를 전파할 수 있을까 고민하던 중 PPAP 문자열이라는 것을 고안하게 되었다.</p>\n<p>PPAP 문자열은 문자열 P에서 시작하여, 문자열 내의 P를 PPAP로 바꾸는 과정을 반복하여 만들 수 있는 문자열로 정의된다. 정확하게는 다음과 같이 정의된다.</p>\n<ul>\n<li>P는 PPAP 문자열이다.</li>\n<li>PPAP 문자열에서 P 하나를 PPAP로 바꾼 문자열은 PPAP 문자열이다.</li>\n</ul>\n<p>예를 들어 PPAP는 PPAP 문자열이다. 또한, PPAP의 두 번째 P를 PPAP로 바꾼 PPPAPAP 역시 PPAP 문자열이다.</p>\n<p>문자열이 주어졌을 때, 이 문자열이 PPAP 문자열인지 아닌지를 알려주는 프로그램을 작성하여라.</p>\n<h3>입력</h3>\n<ul>\n<li>첫 번째 줄에 문자열이 주어진다. 문자열은 대문자 알파벳 P와 A로만 이루어져 있으며, 문자열의 길이는 1 이상 1,000,000 이하이다.</li>\n</ul>\n<h3>출력</h3>\n<ul>\n<li>첫 번째 줄에 주어진 문자열이 PPAP 문자열이면 PPAP를, 아닌 경우 NP를 출력한다.</li>\n</ul>\n<hr />\n<h4>1. 기본 아이디어 및 소스코드</h4>\n<ol>\n<li>P가 나오면 일단 <code>pcount</code>를 하나 증가시킨다.</li>\n<li>A가 나오면, 앞에 P가 2개 이상 있어야하므로, <code>pcount >= 2</code>인지 확인해준다.\n<ol>\n<li>A 바로 뒤의 글자가 P이면 <code>pcount</code>를 하나 내려준다.</li>\n<li>A 바로 뒤의 글자가 A라면 A가 연속해서 두 개 나오는 경우는 PPAP 문자열이 될 수 없으므로 <code>NP</code>출력 후 종료</li>\n</ol>\n</li>\n<li>최종 결과가 <code>pcount == 1</code>이라면 PPAP 문자열이고, 아니면 아닌거다.</li>\n</ol>\n<deckgo-highlight-code language=\"cpp\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">#include &lt;iostream&gt;\r\n#include &lt;cstring&gt;\r\n\r\nint main()\r\n{\r\n    char str[1000001];\r\n    int pcount = 0;\r\n\r\n    scanf(&quot;%s&quot;, str);\r\n\r\n    for (int i = 0; i &lt; strlen(str); i++)\r\n    {\r\n        if (str[i] == &#39;P&#39;)\r\n            pcount++;\r\n\r\n        else if (str[i] == &#39;A&#39;)\r\n        {\r\n            if (pcount &gt;= 2 &amp;&amp; str[i + 1] == &#39;P&#39;)\r\n            {\r\n                pcount--;\r\n                i++;\r\n            }\r\n            else\r\n            {\r\n                printf(&quot;NP\\n&quot;);\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (pcount == 1)\r\n        printf(&quot;PPAP\\n&quot;);\r\n    else\r\n        printf(&quot;NP\\n&quot;);\r\n}</code>\n        </deckgo-highlight-code>","title":"[C++] BOJ #16120 PPAP","date":"2022. 02. 05","next":{"frontmatter":{"path":"/boj10845","title":"[C++] BOJ #10845 큐"}},"previous":{"frontmatter":{"path":"/boj1158","title":"[C++] BOJ #1158 요세푸스 문제"}}}},
    "staticQueryHashes": ["3649515864"]}