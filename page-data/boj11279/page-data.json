{
    "componentChunkName": "component---src-templates-prob-solving-template-js",
    "path": "/boj11279",
    "result": {"pageContext":{"html":"<h2>문제</h2>\n<p>널리 잘 알려진 자료구조 중 최대 힙이 있다. 최대 힙을 이용하여 다음과 같은 연산을 지원하는 프로그램을 작성하시오.</p>\n<ol>\n<li>배열에 자연수 x를 넣는다.</li>\n<li>배열에서 가장 큰 값을 출력하고, 그 값을 배열에서 제거한다.</li>\n</ol>\n<p>프로그램은 처음에 비어있는 배열에서 시작하게 된다.</p>\n<h3>입력</h3>\n<ul>\n<li>첫째 줄에 연산의 개수 N(1 ≤ N ≤ 100,000)이 주어진다. 다음 N개의 줄에는 연산에 대한 정보를 나타내는 정수 x가 주어진다. 만약 x가 자연수라면 배열에 x라는 값을 넣는(추가하는) 연산이고, x가 0이라면 배열에서 가장 큰 값을 출력하고 그 값을 배열에서 제거하는 경우이다. 입력되는 자연수는 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>31</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{31}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">31</span></span></span></span></span></span></span></span></span></span></span></span></span>보다 작다.</li>\n</ul>\n<h3>출력</h3>\n<ul>\n<li>입력에서 0이 주어진 회수만큼 답을 출력한다. 만약 배열이 비어 있는 경우인데 가장 큰 값을 출력하라고 한 경우에는 0을 출력하면 된다.</li>\n</ul>\n<hr />\n<h4>1. 기본 아이디어 및 소스코드</h4>\n<ul>\n<li>C++의 <queue> 헤더파일 안에 있는 <code>priority_queue</code>를 사용하였다.</li>\n<li>이후에는 문제에서 요구하는대로 조건을 나눠서 짜면 된다.</li>\n</ul>\n<deckgo-highlight-code language=\"cpp\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">#include &lt;iostream&gt;\r\n#include &lt;algorithm&gt;\r\n#include &lt;queue&gt;\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    priority_queue&lt;int&gt; pq;\r\n    int N, x;\r\n\r\n    scanf(&quot;%d&quot;, &amp;N);\r\n\r\n    for (int i = 0; i &lt; N; i++)\r\n    {\r\n        scanf(&quot;%d&quot;, &amp;x);\r\n\r\n        if (x == 0)\r\n        {\r\n            if (pq.empty())\r\n            {\r\n                printf(&quot;0\\n&quot;);\r\n            }\r\n            else\r\n            {\r\n                printf(&quot;%d\\n&quot;, pq.top());\r\n                pq.pop();\r\n            }\r\n        }\r\n\r\n        else\r\n        {\r\n            pq.push(x);\r\n        }\r\n    }\r\n}</code>\n        </deckgo-highlight-code>","title":"[C++] BOJ #11579 최대 힙","date":"2022. 02. 14","next":{"frontmatter":{"path":"/boj2750","title":"[C++] BOJ #2750 수 정렬하기"}},"previous":{"frontmatter":{"path":"/boj1927","title":"[C++] BOJ #1927 최소 힙"}}}},
    "staticQueryHashes": ["3649515864"]}